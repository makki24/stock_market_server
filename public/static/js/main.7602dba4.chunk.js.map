{"version":3,"sources":["Component/HeaderComponent.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","Component/LoadingComponent.js","Component/AccountComponent.js","Component/TransactionComponent.js","Component/StockComponent.js","Component/Shares.js","Component/HomeComponent.js","Component/CreateAccount.js","Component/ContactUs.js","Component/FooterComponent.js","Component/MainComponent.js","redux/auth.js","redux/account.js","redux/corporation.js","redux/shares.js","redux/myShares.js","redux/sales.js","redux/forms.js","redux/accountCreation.js","redux/country.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","isModOpen","toggleMod","bind","handleSubmit","handleLogout","this","logoutUser","setState","event","preventDefault","loginUser","username","value","password","isAuthenticated","Navbar","dark","expand","className","NavbarToggler","onClick","toggleNav","to","NavbarBrand","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","auth","creds","Button","outline","isLoading","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","id","type","name","innerRef","input","check","remember","color","role","style","textDecoration","Component","baseUrl","fetchAccount","dispatch","fetchHolds","fetchHistory","fetchUser","fetch","method","credentials","then","response","ok","error","Error","status","statusText","err","json","history","catch","message","historyError","holds","alert","holdsError","payload","userFailure","fetchCountry","countrySuccess","console","log","fetchCorporation","corpLoading","corpSuccess","corpFailure","fetchShares","shareLoading","shareSuccess","shareFailure","res","myShareFailed","myShareLoading","myShareSuccess","addMoneyFailed","Loading","Account","addMoney","amount","Holds","account","errHolds","Table","hover","stocks","success","map","stock","index","obj","shareId","key","scope","priceBoughtAt","shareValue","sale","sellShare","Acc","detailLoading","errorDetail","details","accountBalance","Card","CardHeader","CardBody","TransactionComponent","shareName","priceSoldAt","Date","timeBoughtAt","toLocaleDateString","toLocaleTimeString","timeSoldAt","historyLoading","errHistory","RenderCompany","company","corpId","CardImg","image","corpName","textAlign","fontWeight","background","startDate","corpType","StockComponent","corporation","Breadcrumb","BreadcrumbItem","active","RenderShares","shares","buyShare","myShares","solout","share","soldOut","marketName","Shares","HomeComponent","fontSize","fontFamily","style2","alignItems","smstyle2","smstyle","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","CreateAccount","values","lastname","JSON","stringify","createAccount","countr","country","item","accountCreation","model","validators","passwordsMatch","vals","rpassword","licence","broker","LicenceNumber","ranges","parseFloat","commission","isNumberCommision","Row","md","Col","text","placeholder","show","messages","select","size","offset","checkbox","textarea","rows","validEmail","test","Contact","resetFeedbackForm","href","Footer","MainComponent","fetchObjects","PrivateRoute","component","rest","render","pathname","from","location","path","exact","postFeedback","match","filter","params","corpID","errMess","withRouter","connect","headers","body","localStorage","setItem","loginError","removeItem","logoutFailure","data","actions","reset","accountFailed","logoutSuccess","Auth","getItem","parse","action","holdsLoading","firstname","phone","address","commision","gender","InitialFeedback","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","createaccount","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7602dba4.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nimport {\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Collapse,\n    NavItem,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form, FormGroup, Label, Input\n} from \"reactstrap\";\nimport {Link, NavLink} from 'react-router-dom';\nclass Header extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModOpen:false\n        };\n        this.toggleMod=this.toggleMod.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.handleLogout=this.handleLogout.bind(this);\n    }\n    handleLogout()\n    {\n        this.props.logoutUser();\n\n    }\n    toggleNav()\n    {\n        this.setState(\n            {\n                isNavOpen : !this.state.isNavOpen\n            });\n    }\n    toggleMod()\n    {\n        this.setState(\n            {\n                isModOpen: !this.state.isModOpen\n            }\n        )\n    }\n    handleSubmit(event)\n    {\n            event.preventDefault();\n        this.toggleMod();\n        this.props.loginUser({username:this.username.value,password:this.password.value,isAuthenticated:false});\n    }\n    render()\n    {\n        return (\n           <div>\n            <Navbar dark expand={'md'}>\n                <div className=\"container\">\n                <NavbarToggler onClick={()=>this.toggleNav()} />\n                    <Link to={'/home'}><NavbarBrand className={\"mr-auto\"} > <img src={'assets/images/logo.png'} height={'30'} width={'41'} alt={\"Mind Trade\"} />\n                    </NavbarBrand></Link>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/stock'><span className=\"fa fa-list fa-lg\"></span> Stocks</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                            </NavItem>\n                            </Nav>\n                         <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    { !this.props.auth.isAuthenticated ?\n                                        <Button outline onClick={this.toggleMod}>\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                            {this.props.auth.isLoading ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        :\n                                        <div>\n                                            <NavLink to={'/user'}><span className=\"fa fa-user fa-lg mr-2\"></span>\n                                                <div className=\"navbar-text mr-3\">{this.props.auth.creds.username}</div>\n                                            </NavLink>\n                                            <Link to={'/home'} className={'link'}>\n                                            <Button outline onClick={this.handleLogout} >\n                                                <span className=\"fa fa-sign-out fa-lg\"></span>\n                                                Logout\n                                                {this.props.auth.isLoading ?\n                                                    <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                    : null\n                                                }\n                                            </Button>\n                                            </Link>\n                                        </div>\n                                    }\n\n                                </NavItem>\n                            </Nav>\n                    </Collapse>\n                </div>\n            </Navbar>\n           <div className=\"Jumbotron\">\n           <div className=\"container\">\n               <div className=\"row row-header\">\n                   <div className=\"col-12 col-sm-6\">\n                       <h1 >Mind Trade</h1>\n                       <p>\n                           <span>A stock trading platform which offers quick and easy stock trading to its customers.\n                                    Register now and join us in your journey in becoming next Warren Buffet.</span>\n                       </p>\n                   </div>\n               </div>\n           </div>\n           <Modal isOpen={this.state.isModOpen} toggle={this.toggleMod}>\n               <ModalHeader toggle={this.toggleMod}>\n                Login\n               </ModalHeader>\n               <ModalBody>\n                   <Form onSubmit={this.handleSubmit}>\n                       <FormGroup>\n                           <Label htmlFor={'username'}> Username</Label>\n                           <Input id={'username'} type={'text'} name={'username'} innerRef={(input)=>\n                           this.username=input} />\n                       </FormGroup>\n                       <FormGroup>\n                           <Label htmlFor={'password'}> Password</Label>\n                           <Input id={'password'} type={'password'} name={'password'} innerRef={(input)=>\n                           this.password=input} />\n                       </FormGroup>\n                       <FormGroup check>\n                           <Label check>\n                               <Input id={'remeber'} type={'checkbox'} name={'remember'} innerRef={(input)=>\n                           this.remember=input} />\n                           Remember Me\n                           </Label>\n                       </FormGroup>\n                       <Button type={'submit'} color={'primary'} role={'button'}>Submit</Button>\n                       <Link to={'/createAccount'} style={{textDecoration:'none'}}><Button onClick={() => {this.toggleMod()}}  color={'success'} role={'button'} className={'ml-2'}>Register</Button></Link>\n                   </Form>\n               </ModalBody>\n           </Modal>\n           </div>\n           </div>\n        );\n    }\n}\nexport default Header;","//export const baseUrl=\"http://54.164.193.209:3000/\";\nexport const baseUrl =\"http://localhost:3000/\"","import {baseUrl} from \"../shared/baseUrl\";\nimport * as ActionTypes from \"./ActionTypes\";\nimport {actions} from \"react-redux-form\";\n\nexport const requestLogin =() =>\n{\n    return{\n        type:ActionTypes.LOGIN_REQUEST\n    }\n}\n\nexport const receiveLogin =() =>\n{\n    return {\n        type: ActionTypes.LOGIN_SUCCESS\n\n    }\n}\n\nexport const loginError =(err) =>\n{\n    return{\n        type:ActionTypes.LOGIN_FAILURE,\n        message:err.message\n    }\n}\n\nexport const loginUser =(creds) =>(dispatch) =>\n{\n    dispatch(requestLogin());\n\n    return fetch(baseUrl+'users/login',\n        {\n            method:'POST',\n            headers:\n                {\n                    'Content-Type':'application/json'\n                },\n            body: JSON.stringify(creds),\n            credentials:'include'\n        })\n        .then(response =>\n        {\n            if(response.ok)\n                return response;\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },err=> {throw (err)})\n        .then(response => response.json())\n        .then(response =>\n        {\n            console.log(response);\n            if(response.success)\n            {\n                creds.isAuthenticated=true;\n                localStorage.setItem('creds',JSON.stringify(creds));\n                dispatch(receiveLogin());\n                dispatch(fetchAccount());\n            }\n            else\n            {\n                var error = new Error('Error ' + response.err);\n                error.response = response;\n                throw error;\n            }\n        })\n        .catch((err)=>\n        {\n            dispatch(loginError(err))\n            alert(err);\n        })\n}\n\nexport const logoutRequest =() =>\n{\n    return {\n        type:ActionTypes.LOGOUT_REQUEST,\n    }\n}\n\nexport const logoutSuccess =() =>\n{\n    return{\n        type:ActionTypes.LOGOUT_SUCCESS\n    }\n}\n\nexport const logoutFailure = (err)=>\n{\n    return{\n        type:ActionTypes.LOGOUT_FAILURE,\n        message:err.message\n    }\n}\nexport const logoutUser =() =>(dispatch) =>\n{\n    dispatch(logoutRequest());\n\n    return fetch(baseUrl+'users/logout',\n        {\n            method:'POST',\n            credentials:'include'\n        })\n        .then((response) =>\n        {\n            if(response.ok)\n                return response;\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },(error) =>{throw (error)})\n        .then(response =>response.json())\n        .then((response) =>\n        {\n            localStorage.removeItem('creds');\n            dispatch(logoutSuccess());\n\n            if(!response.success)\n            {\n                console.log(response);\n                var error = new Error('Error ' + response.err);\n                error.response = response;\n                throw (error);\n            }\n        })\n        .catch((err) =>\n        {\n            alert(err);\n            dispatch(logoutFailure(err));\n        })\n\n}\n\nexport const holdsSuccess =(holds) =>\n{\n    return{\n        type:ActionTypes.HOLDS_SUCCESS,\n        holds:holds\n    }\n}\n\nexport const holdsRequest =() =>\n{\n    return{\n        type:ActionTypes.HOLDS_REQUEST\n    }\n}\n\nexport const historyRequest =() =>\n{\n    return{\n        type:ActionTypes.HISTORY_REQUEST\n    }\n}\n\nexport const holdsError= (err) =>\n{\n    return{\n        type:ActionTypes.HOLDS_FAILURE,\n        message:err.message\n    }\n}\n\nexport const historySuccess =(history) =>\n{\n    return{\n        type:ActionTypes.HISTORY_SUCCESS,\n        history:history\n    }\n}\n\nexport const historyError= (err) =>\n{\n    return{\n        type:ActionTypes.HISTORY_FAILURE,\n        message:err.message\n    }\n}\n\nexport const fetchAccount =() => (dispatch) =>\n{\n    dispatch(fetchHolds());\n    dispatch(fetchHistory());\n    dispatch(fetchUser());\n    return;\n}\n\nexport const fetchHistory=() => (dispatch) =>\n{\n    dispatch(historyRequest());\n    return fetch(baseUrl+'users/trades/history',\n        {\n            method:'GET',\n            credentials:'include'\n        })\n        .then((response) =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },(err) =>{throw (err)})\n        .then(response=>response.json())\n        .then((response) =>\n        {\n            dispatch(historySuccess(response));\n        })\n        .catch((err) =>\n        {\n            dispatch(historyError(err));\n        })\n\n}\nexport const fetchHolds =() =>(dispatch) =>\n{\n    dispatch(holdsRequest());\n    return fetch(baseUrl+'users/trades/holds',\n        {\n            method:'GET',\n            credentials:'include'\n        })\n        .then((response) =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },(err) =>{ throw (err)})\n        .then(response => response.json())\n        .then((response) =>\n        {\n            dispatch(holdsSuccess(response));\n        })\n        .catch((err) =>{alert(err);dispatch(holdsError(err))})\n}\n\nexport const userRequest =() =>\n{\n    return{\n        type:ActionTypes.USER_REQUEST\n    }\n};\n\nexport const userFailure =(err) =>\n{\n    return{\n        type:ActionTypes.USER_FAILURE,\n        message:err.message\n    }\n};\n\nexport const userSuccess =(data)=>\n{\n    return{\n        type:ActionTypes.USER_SUCCESS,\n        payload:data\n    }\n};\nexport const fetchUser =() =>(dispatch) =>\n{\n    dispatch(userRequest());\n\n    return fetch(baseUrl+'users/details',\n        {\n            method:'GET',\n            credentials:'include'\n        })\n        .then((response) =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },(err) =>{throw (err)})\n        .then(response =>response.json())\n        .then((response) =>\n        {\n            dispatch(userSuccess(response));\n        })\n        .catch((err) =>{dispatch(userFailure(err))})\n};\n\nexport const fetchObjects =() =>(dispatch) =>\n{\n    dispatch(fetchCorporation());\n    dispatch(fetchShares());\n    dispatch(fetchCountry());\n};\n\nexport const fetchCountry =() =>(dispatch) =>\n{\n    return fetch(baseUrl+'country')\n        .then((response) =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },(err) =>{throw (err)})\n        .then(response =>response.json())\n        .then((response) =>\n        {\n            dispatch(countrySuccess(response));\n        })\n        .catch((err) =>{console.log(err)})\n}\nexport const fetchCorporation =() =>(dispatch) =>\n{\n    dispatch(corpLoading());\n\n    return fetch(baseUrl+'corporation')\n        .then((response) =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },(err) =>{throw (err)})\n        .then(response =>response.json())\n        .then((response) =>\n        {\n            dispatch(corpSuccess(response));\n        })\n        .catch((err) =>{dispatch(corpFailure(err))})\n};\n\nexport const corpLoading =()=>\n{\n    return{\n        type:ActionTypes.CORP_LOADING\n    }\n}\n\nexport const corpSuccess =(response) =>\n{\n    return{\n        type:ActionTypes.CORP_SUCCESS,\n        payload:response\n    }\n};\n\nexport const countrySuccess =(response) =>\n{\n    return{\n        type:ActionTypes.COUNTRY_SUCCESS,\n        payload:response\n    }\n};\n\nexport const corpFailure =(err) =>\n{\n    return{\n        type:ActionTypes.CORP_FAILURE,\n        message:err.message\n    }\n};\n\nexport const fetchShares =() => (dispatch)=>\n{\n    dispatch(shareLoading());\n\n    return fetch(baseUrl+'shares')\n        .then((response) =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },(err) =>{throw (err)})\n        .then(response =>response.json())\n        .then((response) =>\n        {\n            dispatch(shareSuccess(response));\n        })\n        .catch((err) =>\n        {\n            alert(err.message);\n            dispatch(shareFailure(err))\n        })\n};\n\nexport const shareLoading=()=>\n{\n    return{\n        type:ActionTypes.SHARE_LOADING\n    }\n};\n\nexport const shareFailure =(err) =>\n{\n    return{\n        type:ActionTypes.SHARE_FAILURE,\n        message:err.message\n    }\n};\n\nexport const shareSuccess =(res) =>\n{\n    return{\n        type:ActionTypes.SHARE_SUCCESS,\n        payload:res\n    }\n};\n\n\nexport const buyShare =(data) =>(dispatch) =>\n{\n    dispatch(myShareLoading());\n    return fetch(baseUrl+'users/trades',\n        {\n            method:'POST',\n            headers:\n                {\n                    'Content-Type':'application/json'\n                },\n            body: JSON.stringify(data),\n            credentials:'include'\n        })\n        .then(response =>\n        {\n            if(response.ok)\n                return response;\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },err=> {throw (err)})\n        .then(response => response.json())\n        .then(response =>\n        {\n            if(response.success)\n            {\n                dispatch(fetchShares());\n                dispatch(fetchAccount());\n                dispatch(myShareSuccess());\n            }\n            else\n            {\n                var error = new Error('Error ' + response.err);\n                error.response = response;\n                throw error;\n            }\n        })\n        .catch((err)=>\n        {\n            alert(err);\n            dispatch(myShareFailed(err));\n        })\n}\n\nexport const myShareFailed =(err) =>\n{\n    return{\n        type:ActionTypes.MYSHARE_FAILURE,\n        err:err.message\n    }\n}\n\nexport const myShareLoading =() =>\n{\n    return{\n        type:ActionTypes.MYSHARE_LOADING\n    }\n}\n\nexport const myShareSuccess=() =>\n{\n    return{\n        type:ActionTypes.MYSHARE_SUCCESS\n    }\n}\n\nexport const sellLoading= () =>\n{\n    return{\n        type:ActionTypes.SALE_LOADING\n    }\n}\n\nexport const sellSuccess =() =>\n{\n    return{\n        type:ActionTypes.SALE_SUCCESS\n    }\n}\n\nexport const sellShare =(data) =>(dispatch) =>\n{\n    dispatch(sellLoading());\n\n    console.log(\"from actions\",data);\n    return fetch(baseUrl+'users/trades',\n        {\n            method:'DELETE',\n            credentials:'include',\n            headers:\n                {\n                    'Content-Type':'application/json'\n                },\n            body: JSON.stringify(data),\n        })\n        .then(response =>\n        {\n            if(response.ok)\n                return response;\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw (error) ;\n            }\n        },err=> {throw (err)})\n        .then(response => response.json())\n        .then(response =>\n        {\n            if(response.success)\n            {\n                dispatch(fetchShares());\n                dispatch(fetchAccount());\n                dispatch(sellSuccess());\n            }\n            else\n            {\n                var error = new Error('Error ' + response.err);\n                error.response = response;\n                throw error;\n            }\n        })\n        .catch((err)=>\n        {\n            alert(err);\n            dispatch(sellSuccess(err));\n        })\n}\n\nexport const accountLoading =() =>\n{\n    return{\n        type:ActionTypes.ACCOUNT_LOADING\n    }\n};\n\nexport const accountFailed=(err) =>\n{\n    return{\n        type:ActionTypes.ACCOUNT_ERROR,\n        message:err.message\n    }\n};\n\nexport const accountSuccess=() =>\n{\n    return{\n        type:ActionTypes.ACCOUNT_SUCCESS\n    }\n}\n\nexport const createAccount= (data) =>(dispatch) =>\n{\n    dispatch(accountLoading());\n\n    return fetch(baseUrl+'users/signup',\n        {\n            method:'POST',\n             headers:\n                {\n                    'Content-Type':'application/json'\n                },\n            body: JSON.stringify(data),\n        },err=> {throw (err)})\n        .then(response => response.json())\n        .then(response =>\n        {\n            if(response.success)\n            {\n                dispatch(accountSuccess());\n                dispatch(actions.reset('createaccount'))\n            }\n            else\n            {\n                var error = new Error('Error ' + response.err);\n                error.response = response;\n                throw error;\n            }\n        })\n        .catch((err)=>\n        {\n            alert(err);\n            dispatch(accountFailed(err));\n        })\n}\n\nexport const addMoney =(data) =>(dispatch) =>\n{\n    dispatch(userRequest());\n\n    return fetch(baseUrl+'users/trades/addMoney',\n        {\n            method:'POST',\n            credentials:'include',\n            headers:{\n                'Content-Type':'application/json',\n\n            },\n            body: JSON.stringify(data),\n        },err=> {throw (err)})\n        .then(response => response.json())\n        .then(response =>\n        {\n            if(response.success)\n            {\n                dispatch(fetchUser());\n            }\n            else\n            {\n                var error = new Error('Error ' + response.err);\n                error.response = response;\n                throw error;\n            }\n        })\n        .catch((err)=>\n        {\n            alert(err);\n            dispatch(addMoneyFailed())\n        })\n}\n\nexport const addMoneyFailed=() =>\n{\n    return{\n        type:ActionTypes.ADDMONEY_FAILED\n    }\n}","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_REQUEST ='LOGIN_REQUEST';\nexport const LOGOUT_REQUEST ='LOGOUT_REQUEST';\nexport const LOGIN_FAILURE ='LOGIN_FAILURE';\nexport const LOGOUT_SUCCESS ='LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE ='LOGOUT_FAILURE';\nexport const HOLDS_SUCCESS= 'HOLDS_SUCCESS';\nexport const HOLDS_FAILURE= 'HOLDS_FAILURE';\nexport const HOLDS_REQUEST= 'HOLDS_REQUEST';\nexport const HISTORY_REQUEST= 'HISTORY_REQUEST';\nexport const HISTORY_SUCCESS= 'HISTORY_SUCCESS';\nexport const HISTORY_FAILURE= 'HISTORY_FAILURE';\nexport const USER_FAILURE= 'USER_FAILURE';\nexport const USER_REQUEST= 'USER_REQUEST';\nexport const USER_SUCCESS= 'USER_SUCCESS';\nexport const CORP_LOADING = 'CORP_LOADING';\nexport const CORP_SUCCESS = 'CORP_SUCCESS';\nexport const CORP_FAILURE = 'CORP_FAILURE';\nexport const SHARE_LOADING = 'SHARE_LOADING';\nexport const SHARE_SUCCESS = 'SHARE_SUCCESS';\nexport const SHARE_FAILURE = 'SHARE_FAILURE';\nexport const MYSHARE_LOADING = 'MYSHARE_LOADING';\nexport const MYSHARE_SUCCESS = 'MYSHARE_SUCCESS';\nexport const MYSHARE_FAILURE = 'MYSHARE_FAILURE';\nexport const SALE_LOADING ='SALE_LOADING';\nexport const SALE_FAILED ='SALE_FAILED';\nexport const SALE_SUCCESS ='SALE_SUCCESS';\nexport const ACCOUNT_SUCCESS ='ACCOUNT_SUCCESS';\nexport const ACCOUNT_LOADING ='ACCOUNT_LOADING';\nexport const ACCOUNT_ERROR ='ACCOUNT_ERROR';\nexport const ADDMONEY_FAILED='ADDMONEY_FAILED';\nexport const COUNTRY_LOADING = 'COUNTRY_LOADING';\nexport const COUNTRY_SUCCESS = 'COUNTRY_SUCCESS';\nexport const COUNTRY_FAILURE = 'COUNTRY_FAILURE';\n\n\n\n\n\n\n\n","import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","import React, {Component} from \"react\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    Table,\n    Button,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input, Modal\n} from \"reactstrap\";\nimport {Loading} from \"./LoadingComponent\";\nimport {Link} from \"react-router-dom\";\n\n\nclass Account extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            isModOpen:false\n        };\n        this.toggleMod=this.toggleMod.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n    toggleMod()\n    {\n        this.setState(\n            {\n                isModOpen: !this.state.isModOpen\n            }\n        )\n    }\n    handleSubmit(event)\n    {\n        event.preventDefault();\n        this.toggleMod();\n        this.props.addMoney({amount:this.amount.value})\n    }\n    render()\n    {\n            const Holds = () =>\n            {\n                if (this.props.account.isLoading)\n                    return (\n                        <div className={'container'}>\n                            <div className={'row'}>\n                                <Loading/>\n                            </div>\n                        </div>\n                    );\n                else if (this.props.account.errHolds)\n                    return (\n                        <div className={'container'}>\n                            <div className={'row'}>\n                                <h4>{this.props.account.errHolds}</h4>\n                            </div>\n                        </div>\n                    );\n                else\n                {\n                    return (\n                        <Table hover className={''}>\n                            <thead className={''}>\n                            <tr>\n                                <th>#</th>\n                                <th>Share</th>\n                                <th className={'d-none d-md-block'}>Price Bought At</th>\n                                <th>Current Value</th>\n                                <th></th>\n                            </tr>\n                            </thead>\n                            <tbody className={'text-align-center'}>\n                            {stocks}\n                            </tbody>\n                        </Table>\n                    )\n                }\n            }\n            const stocks = this.props.account.holds.success!==false ? this.props.account.holds.map((stock, index) =>\n            {\n                var obj={shareId:stock.shareId};\n                return (\n                    <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{stock.shareId}</td>\n                        <td className={'d-none d-md-block'}>{stock.priceBoughtAt} $</td>\n                        <td>{stock.shareValue} $</td>\n                        <td>{this.props.sale.isLoading?<Loading />:<Button color={'success'} className={'btn-block'} onClick={() =>{\n                            console.log(obj);\n                            this.props.sellShare(obj)}}>Sell</Button> }</td>\n                    </tr>\n                )\n            }):'Please logout and login';\n            const Acc = () =>\n            {\n                console.log(this.props.account);\n                if (this.props.account.detailLoading === true)\n                    return (\n                        <Loading/>\n                    );\n                else if (this.props.account.errorDetail !== null)\n                    return (\n                        <div>\n                            {this.props.account.errorDetail}\n                        </div>\n                    );\n                else if (this.props.account.details)\n                {\n                    console.log(\"here\");\n                    return (\n                        <div>\n                            {this.props.account.details.accountBalance} $\n                        </div>\n                    );\n                }\n                else\n                {\n                    return (\n                        <div>\n\n                        </div>\n                    )\n                }\n            }\n            if(this.props.account.holds.success===false)\n                return (\n                    <div className={'container'}>\n                        <h1>Please Logout and login</h1>\n                    </div>\n                )\n            return (\n                <div className={\"container\"}>\n                    <div className={\"row mt-2\"}>\n                        <div className={\"col-12 col-md-6\"}>\n                            <Card>\n                                <CardHeader className={'bg-primary text-white'}>My stocks</CardHeader>\n                                <CardBody>\n                                    <Holds/>\n                                </CardBody>\n                            </Card>\n                        </div>\n                        <div className={\"col-md-1\"}>\n                        </div>\n                        <div className={\"col-md-4\"}>\n                            <Card>\n                                <CardHeader className={'bg-primary text-white'}> Account</CardHeader>\n                                <CardBody>\n                                    <div className={'row'}>\n                                        <div className={'col-6'}>\n                                            Account Balance\n                                        </div>\n                                        <div className={'col-6 '}>\n                                            <Acc/>\n                                        </div>\n                                    </div>\n                                    <div className={'row mt-2'}>\n                                        <div className={'col-6'}>\n                                            <Link to={'/user/history'}>Share Transactions</Link>\n                                        </div>\n                                    </div>\n                                    <div className={'row mt-2'}>\n                                        <div className={'col-6'}>\n                                            <Button className={'bg-info'} onClick={this.toggleMod}><span className={'fa fa-money fa-lg'}></span> Add money\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </div>\n                    </div>\n                    <Modal isOpen={this.state.isModOpen} toggle={this.toggleMod}>\n                       <ModalHeader toggle={this.toggleMod}>\n                        Add money\n                       </ModalHeader>\n                       <ModalBody>\n                           <Form onSubmit={this.handleSubmit}>\n                               <FormGroup>\n                                   <Label htmlFor={'Amount'}> Amount(In local currency)</Label>\n                                   <Input id={'Amount'} type={'number'} name={'Amount'} innerRef={(input)=>\n                                   this.amount=input} />\n                               </FormGroup>\n                               <Button type={'submit'} color={'primary'} role={'button'}>Submit</Button>\n                           </Form>\n                       </ModalBody>\n                    </Modal>\n                </div>\n            );\n    }\n}\n\nexport default Account;","import React from \"react\";\nimport {Card, CardBody, CardHeader, Table} from \"reactstrap\";\nimport {Loading} from \"./LoadingComponent\";\n\nconst TransactionComponent =(props) =>\n{\n    const history=props.account.history.map((stock,index) =>\n    {\n        return(\n                <tr key={index}>\n                  <th scope=\"row\"  className={'d-none d-md-block'}>{index+1}</th>\n                  <td>{stock.shareName}</td>\n                  <td>{stock.priceBoughtAt} $</td>\n                  <td className={'d-none d-md-block'}>{stock.priceSoldAt?stock.priceSoldAt+' $':null}</td>\n                  <td>{new Date(stock.timeBoughtAt).toLocaleDateString()+\" \"+new Date(stock.timeBoughtAt).toLocaleTimeString()}</td>\n                  <td className={'d-none d-md-block'}>{stock.timeSoldAt?new Date(stock.timeSoldAt).toLocaleDateString()+\" \"+new Date(stock.timeSoldAt).toLocaleTimeString():null}</td>\n                </tr>\n            )\n\n    })\n    if(props.account.historyLoading)\n    {\n        return (\n            <div className={'container'}>\n                <div className={'row'}>\n                    <Loading />\n                </div>\n            </div>\n        )\n    }\n    else if(props.account.errHistory)\n    {\n        return (\n            <div className={'container'}>\n                <div className={'row'}>\n                    {props.account.errHistory}\n                </div>\n            </div>\n        )\n    }\n    else\n    {\n        return (\n            <div className={'container'}>\n                <div className={'row mt-3'}>\n                    <div className={'col-12'}>\n                        <Card>\n                            <CardHeader className={'bg-primary text-white'}>My Transactions</CardHeader>\n                            <CardBody>\n                                <Table  hover>\n                                    <thead className={'bg-info'}>\n                                        <tr>\n                                          <th className={'d-none d-md-block'}>#</th>\n                                          <th>Share</th>\n                                          <th>Price Bought At</th>\n                                          <th className={'d-none d-md-block'}>Price Sold At</th>\n                                          <th>Time Bought At</th>\n                                          <th className={'d-none d-md-block'}>Time Sold At</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className={'text-align-center'}>\n                                        {history}\n                                    </tbody>\n                                </Table>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TransactionComponent;","import React, {Component} from \"react\";\nimport {Breadcrumb, BreadcrumbItem, Card, CardBody, CardImg, CardHeader} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {baseUrl} from \"../shared/baseUrl\";\nimport {Loading} from \"./LoadingComponent\";\n\nfunction RenderCompany({company})\n{\n    return(\n        <Card className={'company-list'}>\n            <Link to={`/stock/${company.corpId}`} style={{textDecoration:'none',color:'black'}}>\n            <CardImg className={''} height={'160'} width={'250'}  src={baseUrl+company.image} alt={company.corpName} />\n            <CardHeader style={{textAlign:'center',fontWeight:'bold',color:'white',background:'blue'}}>\n                {company.corpName}\n            </CardHeader>\n            <CardBody style={{background:'#9999ff',color:'floralwhite'}}>\n                <div className={'row'}>\n                    <div className={'col-6 mr-2'}>\n                        Since\n                    </div>\n                    <div className={'col'}>\n                        {new Date(company.startDate).toLocaleDateString()}\n                    </div>\n                </div>\n                <div className={'row'}>\n                    <div className={'col-6 mr-2'}>\n                        {company.corpType}\n                    </div>\n                </div>\n            </CardBody>\n            </Link>\n        </Card>\n    );\n}\nclass StockComponent extends Component\n{\n    render()\n    {\n        const company=this.props.corporation.company.map((company) =>\n        {\n            return(\n                <div key={company.corpId} className={'col-md-4 mt-4'}>\n                        <RenderCompany company={company}/>\n                </div>\n            )\n        })\n        if(this.props.corporation.isLoading===true)\n        {\n            return (\n                <div className={'container'}>\n                    <div className={'row'}>\n                        <Loading/>\n                    </div>\n                </div>\n            );\n        }\n        else if(this.props.corporation.err!==null)\n        {\n            return (\n                <div className={'container'}>\n                    <div className={'row'}>\n                        <h4>{this.props.corporation.err}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else\n        {\n            return(\n                <div className={'container'}>\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Company</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Company</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className={'row mb-4'}>\n                        {company}\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default StockComponent;","import React,{Component} from \"react\";\nimport {Loading} from \"./LoadingComponent\";\nimport {Breadcrumb, BreadcrumbItem, Table,Button} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\n\nfunction RenderShares({shares,auth,buyShare,myShares})\n{\n    var solout=0;\n    const share =shares.map((share,index) =>\n    {\n        var obj={}\n        obj.shareId=share.shareId;\n        if(share.soldOut===0)\n        {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1-solout}</th>\n                    <td>{share.shareName}</td>\n                    <td>{share.shareValue}</td>\n                    <td>{share.marketName}</td>\n                    <td>{share.name}</td>\n                    {\n                        myShares.isLoading ?<Loading />:\n                        auth.isAuthenticated ? <td><Button className={'btn-block'} color={'primary'} onClick={() =>\n                        {\n                            buyShare(obj)\n                        }}>\n                            Buy\n                        </Button></td> : <td/>\n                    }\n                </tr>)\n        }\n        else\n        {\n            solout++;\n            return (<div></div>);\n        }\n    })\n    return(\n        <Table hover className={'mt-4'}>\n        <thead className={'bg-info'}>\n            <tr>\n              <th>#</th>\n              <th>Share</th>\n              <th>Share Value</th>\n              <th>Market Name </th>\n              <th>Market Country</th>\n              <th></th>\n            </tr>\n        </thead>\n        <tbody className={'text-align-center'}>\n            {share}\n        </tbody>\n        </Table>\n    )\n}\nclass Shares extends Component\n{\n    render()\n    {\n        if(this.props.isLoading)\n            return (\n                <div className={'container'}>\n                    <div className={'row'}>\n                        <Loading />\n                    </div>\n                </div>\n            )\n        else if(this.props.err)\n            return (\n                <div className={'container'}>\n                    <div className={'row'}>\n                        {this.props.err}\n                    </div>\n                </div>\n            );\n        else\n        {\n            return (\n                    <div className={'container'}>\n                        <div className={'row'}>\n                            <Breadcrumb>\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem ><Link to='/stock'>Company</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>{this.props.company?this.props.company.corpName:null}</BreadcrumbItem>\n                            </Breadcrumb>\n                        </div>\n                        <RenderShares shares={this.props.shares} auth={this.props.auth} buyShare={this.props.buyShare} myShares={this.props.myShares}/>\n                    </div>\n            )\n        }\n    }\n}\nexport default Shares;","import React, {Component} from \"react\";\nimport {baseUrl} from \"../shared/baseUrl\";\nclass HomeComponent extends Component\n{\n    constructor() {\n    super();\n    this.style = {\n       color: \"#80CAEF\",\n       fontSize: \"45px\",\n       textAlign: \"\",\n       background:\"#1B3C65\",\n       fontFamily:'verdana',\n       fontWeight:'bold'\n    };\n    this.style2={\n        color: \"#163B65\",\n       fontSize: \"35px\",\n       textAlign: \"\",\n       background: '#7ACCF1',\n       fontFamily:'verdana',\n       fontWeight:'bold',\n       alignItems:'center'\n    }\n    this.smstyle2={\n        color: \"#163B65\",\n       fontSize: \"25px\",\n       textAlign: \"\",\n       background: '#7ACCF1',\n       fontFamily:'verdana',\n       fontWeight:'bold',\n       alignItems:'center'\n    };\n    this.smstyle={\n        color: \"#80CAEF\",\n       fontSize: \"35px\",\n       textAlign: \"\",\n       background: '#1B3C65',\n       fontFamily:'verdana',\n       fontWeight:'bold',\n       alignItems:'center'\n    }\n  }\n    render()\n    {\n        return(\n            <div>\n                <div className={'container2 d-none d-md-block'}>\n                    <div className={'row p-3 p-md-5'} style={this.style}>\n                        <div className={'col-6 offset-md-2 col-md-4'}>\n                            WHY CHOOSE MIND TRADE?\n                        </div>\n                    </div>\n                    <div className={'row p-3 p-md-3'} style={this.style2}>\n                        <div className={'col-5 col-md-3 offset-md-2'}>\n                            WE CARE FOR YOUR TRADE\n                        </div>\n                        <div className={'col-6 col-md-3 offset-md-2'}>\n                            <img src={baseUrl+'images/heartInhand.jpeg'} className={'homePageLogo'} alt={''}/>\n                        </div>\n                    </div>\n                    <div className={'row p-3 p-md-2'} style={{...this.style2,background:'#BAC4D0',color:'#1E3A5F'}}>\n                        <div className={'col-5 col-md-3 offset-md-2'}  >\n                            <img src={baseUrl+'images/bulb.jpeg'} className={'homePageLogo'} alt={''}/>\n                        </div>\n                        <div className={'col-5 col-md-3  offset-md-2'}>\n                            GET PERSONALIZED SUGGESTIONS FROM INDUSTRY EXPERTS\n                        </div>\n                    </div>\n                    <div className={'row p-3 p-md-2'} style={{...this.style2,background:'#7ACCF1',color:'#143A67'}}>\n                        <div className={'col-5 col-md-3  offset-md-2'}>\n                            GET BROKERS WITH SPECIALIZED EXPERIENCE IN INDUSTRY\n                        </div>\n                        <div className={'col-5 col-md-3 offset-md-2'}  >\n                            <img src={baseUrl+'images/shakeHand.jpeg'} className={'homePageLogo'} alt={''}/>\n                        </div>\n                    </div>\n                    <div className={'row p-3 p-md-3'} style={{...this.style2,background:'#BAC4D0',color:'#223C5D'}}>\n                        <div className={'col-5 col-md-3 offset-md-2'}  >\n                            <img src={baseUrl+'images/diamond.jpeg'} className={'homePageLogo'} alt={''}/>\n                        </div>\n                        <div className={'col-5 col-md-4  offset-md-2'}>\n                            WE PROVIDE STATE OF THE ART SERVICES WITH ON DEMAND CUSTOMER SERVICE\n                        </div>\n                    </div>\n                    <div className={'row p-3 p-md-3'} style={{...this.style2,background:'#1B3C65',color:'#78C1E2',fontSize:'20px'}}>\n                        <div className={'col-5 col-md-5 offset-md-2'}>\n                            \"TRADING IS GAME OF MIND AND YOU NEED LION'S HEART TO PLAY IT\"<br /><br/>\n                             BY SHUBHAM AND SYED<br/>\n                             FOUNDERS MIND TRADE INC.\n                        </div>\n                    </div>\n                </div>\n                <div className={'container2 d-block d-md-none'}>\n                    <div className={'row p-3 p-md-5'} style={this.smstyle}>\n                        <div className={'col-10 '}>\n                            WHY CHOOSE MIND TRADE?\n                        </div>\n                    </div>\n                    <div className={'row p-2 p-md-3'} style={{...this.smstyle2}}>\n                        <div className={'col-7'}>\n                            WE CARE FOR YOUR TRADE\n                        </div>\n                        <div className={'col-5'}>\n                            <img src={baseUrl+'images/heartInhand.jpeg'} className={'smhomePageLogo'} alt={''}/>\n                        </div>\n                    </div>\n                    <div className={'row p-2'} style={{...this.smstyle2,background:'#BAC4D0',color:'#1E3A5F',fontSize:'20px'}}>\n                        <div className={'col-5'}  >\n                            <img src={baseUrl+'images/bulb2.jpeg'} className={'smhomePageLogo'} alt={''}/>\n                        </div>\n                        <div className={'col-6'}>\n                            GET PERSONALIZED SUGGESTIONS FROM INDUSTRY EXPERTS\n                        </div>\n                    </div>\n                    <div className={'row p-2'} style={{...this.smstyle2,background:'#7ACCF1',color:'#143A67',fontSize:'20px'}}>\n                        <div className={'col-6 col-md-3  offset-md-2'}>\n                            GET BROKERS WITH SPECIALIZED EXPERIENCE IN INDUSTRY\n                        </div>\n                        <div className={'col-5 col-md-3 offset-md-2'}  >\n                            <img src={baseUrl+'images/shakeHand.jpeg'} className={'smhomePageLogo'} alt={''}/>\n                        </div>\n                    </div>\n                    <div className={'row p-2'} style={{...this.smstyle2,background:'#BAC4D0',color:'#223C5D',fontSize:'20px'}}>\n                        <div className={'col-5 '}  >\n                            <img src={baseUrl+'images/diamond.jpeg'} className={'smhomePageLogo'} alt={''}/>\n                        </div>\n                        <div className={'col-7 '}>\n                            WE PROVIDE STATE OF THE ART SERVICES WITH ON DEMAND CUSTOMER SERVICE\n                        </div>\n                    </div>\n                    <div className={'row p-3 '} style={{...this.smstyle2,background:'#1B3C65',color:'#78C1E2',fontSize:'15px'}}>\n                        <div className={'col-12 '}>\n                            \"TRADING IS GAME OF MIND AND YOU NEED LION'S HEART TO PLAY IT\"<br /><br/>\n                             BY SHUBHAM AND SYED<br/>\n                             FOUNDERS MIND TRADE INC.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomeComponent;","import React, {Component} from \"react\";\nimport {Form,Control,Errors} from \"react-redux-form\";\nimport {Button, Col, Label, Row} from \"reactstrap\";\nimport {Loading} from \"./LoadingComponent\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\n\nclass CreateAccount extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values)\n    {\n\n        if(values.username && values.lastname && values.password)\n        {\n            alert(\"Current State is: \" + JSON.stringify(values));\n            this.props.createAccount(values);\n        }\n        else\n        {\n            alert(\"username, lastname and password is compulsory\");\n        }\n    }\n    render()\n    {\n        const countr=this.props.country.country.map((item) =>{\n            return(\n                <option>{item.name}</option>\n            )\n        });\n        if(this.props.accountCreation.isLoading===true)\n            return (\n                <div className={'container'}>\n                    <div className={'row'}>\n                        <Loading />\n                    </div>\n                </div>\n                );\n        else\n        {\n            return (\n                <div className={'container'}>\n                    <div className={'row'}>\n                        <div className={'col-12'}>\n                            <h3>Create Account</h3>\n                            <hr/>\n                        </div>\n                    </div>\n                    <div className={'row'}>\n                        <div className={'col-12'}>\n                            <Form model={'createaccount'} onSubmit={(values) => this.handleSubmit(values)}\n                                  validators={{\n                                      '': {\n                                          passwordsMatch: (vals) => vals.password === vals.rpassword,\n                                          licence: (vals) =>\n                                          {\n                                              if (vals.broker)\n                                                  return (vals.LicenceNumber && vals.LicenceNumber.length);\n                                              else\n                                                  return 1;\n                                          },\n                                          ranges: (vals) =>\n                                          {\n                                              if (vals.broker)\n                                                  return ((0 <= parseFloat(vals.commission)) && (parseFloat(vals.commission) <= 100));\n                                              else\n                                                  return true;\n                                          },\n                                          isNumberCommision: (vals) =>\n                                          {\n                                              if (vals.broker)\n                                                  return !isNaN(Number(vals.commission));\n                                              else\n                                                  return true;\n                                          }\n                                      },\n                                  }}>\n                                <div className={'row'}>\n                                    <div className={'col-6'}>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor={'username'} md={3}>User name</Label>\n                                            <Col md={9}>\n                                                <Control.text model=\".username\" id=\"username\" name=\"username\"\n                                                              placeholder=\"User Name\"\n                                                              className=\"form-control\"\n                                                              validators={{\n                                                                  maxLength: maxLength(15)\n                                                              }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".username\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        maxLength: 'Must be 15 characters or less'\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </div>\n                                <div className={'row'}>\n                                    <div className={'col-6'}>\n                                        <Row className={'form-group'}>\n                                            <Label htmlFor={'firstname'} md={3}>First name</Label>\n                                            <Col md={9}>\n                                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                                              placeholder=\"First Name\"\n                                                              className=\"form-control\"\n                                                              validators={{\n                                                                  maxLength: maxLength(15)\n                                                              }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".firstname\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        maxLength: 'Must be 15 characters or less'\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className={'col-6'}>\n                                        <Row className={'form-group'}>\n                                            <Label htmlFor={'lastname'} md={3}>Last name</Label>\n                                            <Col md={9}>\n                                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                                              placeholder=\"Last Name\"\n                                                              className=\"form-control\"\n                                                              validators={{\n                                                                  required,\n                                                                  minLength: minLength(3),\n                                                                  maxLength: maxLength(15)\n                                                              }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".lastname\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        required: 'Required. ',\n                                                        minLength: 'Must be greater than 2 characters ',\n                                                        maxLength: 'Must be 15 characters or less'\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </div>\n                                <div className={'row'}>\n                                    <div className={'col-6'}>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"phone\" md={3}>Phone</Label>\n                                            <Col md={9}>\n                                                <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                                                              placeholder=\"Phone Number\"\n                                                              className=\"form-control\"\n                                                              validators={{\n                                                                  required,\n                                                                  minLength: minLength(3),\n                                                                  maxLength: maxLength(15),\n                                                                  isNumber\n                                                              }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".phone\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        required: 'Required  ',\n                                                        minLength: 'Must be greater than 2 numbers ',\n                                                        maxLength: 'Must be 15 numbers or less ',\n                                                        isNumber: 'Must be a number'\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className={'col-6'}>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"country\" md={3}>Country</Label>\n                                            <Col md={9}>\n                                                <Control.select model={'.country'} name={'country'}\n                                                         className={'form-control'}>\n                                                {countr}\n                                                </Control.select>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </div>\n                                <div className={'row'}>\n                                    <div className={'col-9'}>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"gender\" md={2}>Select Gender</Label>\n                                            <Col md={3}>\n                                                <Control.select model={'.gender'} name={'.gender'}\n                                                                className={'form-control'}>\n                                                    <option>Male</option>\n                                                    <option>Female</option>\n                                                </Control.select>\n                                            </Col>\n                                            <Col md={{size: 4, offset: 1}}>\n                                                <div className=\"form-check\">\n                                                    <Label check>\n                                                        <Control.checkbox model=\".broker\" name=\"broker\"\n                                                                          className=\"form-check-input\"\n                                                        /> {' '}\n                                                        <strong>Sign up as a Broker ?</strong>\n                                                    </Label>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className={'col-8 col-md-3'}>\n                                        <Row className={'form-group'}>\n                                            <Label htmlFor=\"type\" md={4}>Broker Type</Label>\n                                            <Col md={8}>\n                                                <Control.select model={'.type'} name={'.type'}\n                                                                className={'form-control'}>\n                                                    <option>full service</option>\n                                                    <option>discount</option>\n                                                    <option>online broker</option>\n                                                </Control.select>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </div>\n                                <div className={'row'}>\n                                    <div className={'col-9'}>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"LicenceNumber\" md={2}>Licence Number</Label>\n                                            <Col md={4}>\n                                                <Control.text model=\".LicenceNumber\" id=\"LicenceNumber\"\n                                                              name=\"LicenceNumber\"\n                                                              placeholder=\"Only for broker\"\n                                                              className=\"form-control\"\n                                                              validators={{\n                                                                  maxLength: maxLength(12)\n                                                              }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".LicenceNumber\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        maxLength: 'Must be 12 Characters or less '\n                                                    }}\n                                                />\n                                                <Errors model={'createaccount'}\n                                                        className={'text-danger'}\n                                                        messages={{\n                                                            licence: \"Please enter licence number\"\n                                                        }}\n                                                />\n                                            </Col>\n                                            <Label htmlFor={\"company\"} md={2}>Company</Label>\n                                            <Col md={3}>\n                                                <Control.text model=\".company\" id=\"company\" name=\"company\"\n                                                              placeholder=\"Only for broker\"\n                                                              className=\"form-control\"\n                                                              validators={{\n                                                                  maxLength: maxLength(12)\n                                                              }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".company\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        maxLength: 'Must be 12 Characters or less '\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className={'col-6 col-md-3'}>\n                                        <Row className={'form-group'}>\n                                            <Label htmlFor={\"commission\"} md={4}>commission</Label>\n                                            <Col md={8}>\n                                                <Control.text model=\".commission\" id=\"commission\" name=\"commission\"\n                                                              placeholder=\"Only for broker\"\n                                                              className=\"form-control\"\n                                                              validators={{\n                                                                  maxLength: maxLength(12)\n                                                              }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".commission\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        maxLength: 'Must be 12 Characters or less '\n                                                    }}\n                                                />\n                                                <Errors model=\"createaccount\"\n                                                        className={'text-danger'}\n                                                        show=\"touched\"\n                                                        messages={{\n                                                            ranges: 'values must be in 0 and 100  ',\n                                                            isNumberCommision: \"Must be a number\"\n                                                        }}/>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </div>\n                                <div className={'row'}>\n                                    <div className={'col-6'}>\n                                        <Row className={'form-group'}>\n                                            <Label htmlFor=\"address\" md={3}>Your Address</Label>\n                                            <Col md={9}>\n                                                <Control.textarea model=\".address\" id=\"address\" name=\"address\"\n                                                                  rows=\"3\"\n                                                                  className=\"form-control\"/>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </div>\n                                <div className={'row'}>\n                                    <div className={'col-6'}>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"password\" md={3}>Enter Your Password</Label>\n                                            <Col md={9}>\n                                                <Control.password model=\".password\" id=\"password\" name=\"password\"\n                                                                  placeholder=\"Password\"\n                                                                  className=\"form-control\"\n                                                                  validators={{\n                                                                      required, minLength: minLength(8)\n                                                                  }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".password\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        minLength: 'Must be greater than 8 Characters ',\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className={'col-6'}>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"password\" md={3}>Re-Enter Password</Label>\n                                            <Col md={9}>\n                                                <Control.password model=\".rpassword\" id=\"rpassword\" name=\"rpassword\"\n                                                                  placeholder=\"Password\"\n                                                                  className=\"form-control\"\n                                                                  validators={{\n                                                                      required, minLength: minLength(8)\n                                                                  }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".rpassword\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        minLength: 'Must be greater than 8 Characters ',\n                                                    }}\n                                                />\n                                                <Errors model=\"createaccount\"\n                                                        className={'text-danger'}\n                                                        show=\"touched\"\n                                                        messages={{\n                                                            passwordsMatch: 'Password doesn\\'t match  ',\n                                                        }}/>\n                                            </Col>\n                                        </Row>\n\n                                    </div>\n                                </div>\n                                <div className={'row'}>\n                                    <div className={'col-6'}>\n                                        <Row className=\"form-group\">\n                                            <Col md={{size: 4, offset: 3}}>\n                                                <Button type=\"submit\" color=\"primary\" className={'btn-block'}>\n                                                    Submit\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </div>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\n\nexport default CreateAccount;\n\n","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Office</h5>\n                            <address>\n                            32 , Mehta Mahal, Mathew Road, Girgaon<br />\n                            Mumbai,  Maharashtra<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +912 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +912 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confused@mind.net\">confused@mind.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+912 1234 5678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href={'skype.com'}><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confused@mind.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Contact;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\" style={{color:'blue'}}>Home</Link></li>\n                            <li><Link to=\"/stock\" style={{color:'blue'}}>Stock</Link></li>\n                            <li><Link to=\"/contactus\" style={{color:'blue'}}>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Office</h5>\n                            <address>\n                            32 , Mehta Mahal, Mathew Road, Girgaon<br />\n                            Mumbai,  Maharashtra<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +912 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +912 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confused@mind.net\" style={{color:'blue'}}>confused@mind.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2020 Mind Trade</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React, {Component} from \"react\";\nimport Header from \"./HeaderComponent\";\nimport {connect} from \"react-redux\";\nimport {Switch, withRouter,Route,Redirect} from \"react-router-dom\"\nimport {\n    addMoney,\n    buyShare, createAccount, fetchAccount,\n    fetchObjects,\n    loginUser, logoutSuccess,\n    logoutUser, sellShare\n} from \"../redux/ActionCreators\";\nimport Account from \"./AccountComponent\";\nimport TransactionComponent from \"./TransactionComponent\";\nimport StockComponent from \"./StockComponent\";\nimport Shares from \"./Shares\";\nimport HomeComponent from \"./HomeComponent\";\nimport CreateAccount from \"./CreateAccount\";\nimport Contact from \"./ContactUs\";\nimport {actions} from \"react-redux-form\";\nimport Footer from \"./FooterComponent\";\n\n\nconst mapStatetoProps = (state) =>\n{\n    return{\n        auth:state.auth,\n        account:state.account,\n        corporation:state.corporation,\n        shares:state.shares,\n        myShares:state.myShares,\n        sale:state.sale,\n        accountCreation:state.accountCreation,\n        country:state.country\n    }\n}\n\nconst mapDispatchToProps =(dispatch) =>(\n{\n    loginUser : (creds) =>dispatch(loginUser(creds)),\n    logoutUser: () =>dispatch(logoutUser()),\n    fetchObjects:() =>dispatch(fetchObjects()),\n    buyShare:(data) =>dispatch(buyShare(data)),\n    fetchAccount:()=>dispatch(fetchAccount()),\n    sellShare:(data) =>dispatch(sellShare(data)),\n    createAccount:(data) =>dispatch(createAccount(data)),\n    addMoney:(data) =>dispatch(addMoney(data)),\n    logoutSuccess:() =>dispatch(logoutSuccess()),\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))}\n});\n\n\nclass MainComponent extends Component\n{\n    componentDidMount()\n    {\n        this.props.fetchObjects();\n        if(this.props.auth.isAuthenticated)\n        {\n            this.props.fetchAccount();\n        }\n    }\n\n    render()\n    {\n        const PrivateRoute = ({ component: Component, ...rest }) => (\n          <Route {...rest} render={(props) => (\n            this.props.auth.isAuthenticated\n              ? <Component {...props} />\n              : <Redirect to={{\n                  pathname: '/home',\n                  state: { from: props.location }\n                }} />\n          )} />\n        );\n        const Accountpage =() =>\n            (\n            <Account  account={this.props.account} auth={this.props.auth} sellShare={this.props.sellShare}\n                      sale={this.props.sale} addMoney={this.props.addMoney}/>\n            );\n        const Historypage =() =>\n        {\n            return(\n                <TransactionComponent account={this.props.account} />\n            )\n        }\n        const Stockpage=() =>\n        {\n            console.log('Stock page called');\n            return(\n                <StockComponent corporation={this.props.corporation}/>\n            )\n        }\n        const Sharepage=(props) =>\n        {\n            console.log(\"share page called\");\n            const match=props.match;\n            return(\n                 <Shares shares={this.props.shares.shares.filter((share) => share.corpId ===match.params.corpID)}\n              company={this.props.corporation.company.filter((company) =>company.corpId===match.params.corpID)[0]}\n              isLoading={this.props.shares.isLoading}\n              errMess={this.props.shares.err}\n              auth={this.props.auth}\n              buyShare={this.props.buyShare}\n              myShares={this.props.myShares}   />\n            );\n        }\n\n        const HomePage =() =>\n            (\n                <HomeComponent />\n            )\n        return(\n            <div>\n                <Header loginUser = { this.props.loginUser} logoutUser ={this.props.logoutUser} auth={this.props.auth}/>\n                <Switch>\n                    <Route path=\"/home\" component={HomePage} />\n                    <PrivateRoute exact path={'/user'} component={Accountpage}/>\n                    <Route exact path={'/createAccount'} component={()=><CreateAccount createAccount={this.props.createAccount}\n                     accountCreation={this.props.accountCreation} country={this.props.country}/>} />\n                     <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\n                            postFeedback={this.props.postFeedback} />} />\n                    <Route exact path={'/user/history'} component={Historypage} />\n                    <Route exact path={'/stock'}  component={Stockpage} />\n                    <Route path={'/stock/:corpID'} component={Sharepage} />\n                    <Redirect to=\"/home\" />\n                </Switch>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStatetoProps,mapDispatchToProps)(MainComponent));","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Auth =(state =\n    {\n        isLoading:false,\n        isAuthenticated:localStorage.getItem('creds')? true:false,\n        errMess:null,\n        creds: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null\n    },action) =>\n{\n    switch (action.type)\n    {\n        case ActionTypes.LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                creds:JSON.parse(localStorage.getItem('creds'))\n            };\n        case ActionTypes.LOGIN_REQUEST:\n            return {\n                ...state,\n                isAuthenticated: false,\n                isLoading: true\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: false\n            };\n        case ActionTypes.LOGOUT_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.message\n            }\n        default:\n            return state\n    }\n}","import * as ActionType from \"./ActionTypes\";\n\nexport const account =(state={\n    holds:[],\n    history:[],\n    holdsLoading:false,\n    historyLoading:false,\n    errHolds:null,\n    errHistory:null,\n    details:null,\n    detailLoading:false,\n    errorDetail:null\n},action) =>\n{\n    switch (action.type)\n    {\n        case ActionType.HOLDS_SUCCESS:\n            return{\n                ...state,\n                holds: action.holds,\n                holdsLoading: false\n            };\n        case ActionType.HOLDS_FAILURE:\n            return {\n                ...state,\n                holdsLoading: false\n            };\n        case ActionType.HOLDS_REQUEST:\n            return {\n                ...state,\n                holdsLoading: true\n            };\n        case ActionType.HISTORY_FAILURE:\n            return {\n                ...state,\n                historyLoading: false,\n                errHistory: action.message\n            };\n        case ActionType.HISTORY_REQUEST:\n            return {\n                ...state,\n                historyLoading: true\n            };\n        case ActionType.HISTORY_SUCCESS:\n            return {\n                ...state,\n                history: action.history,\n                historyLoading: false\n            };\n        case ActionType.USER_FAILURE:\n            return {\n                ...state,\n                errorDetail: action.message,\n                detailLoading: false\n            };\n        case ActionType.USER_REQUEST:\n        return {\n            ...state,\n            detailLoading: true\n        };\n        case ActionType.USER_SUCCESS:\n        return {\n            ...state,\n            details: action.payload,\n            detailLoading: false\n        };\n        case ActionType.ADDMONEY_FAILED:\n            return {\n                ...state,\n                detailLoading: false\n            }\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const corporation =(state={\n    isLoading: false,\n    err:null,\n    company:[]\n},action) =>\n{\n    switch (action.type)\n    {\n        case ActionTypes.CORP_FAILURE:\n            return{\n                ...state,\n                isLoading: false,\n                err:action.message\n            };\n        case ActionTypes.CORP_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case ActionTypes.CORP_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                company: action.payload\n            };\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const shares =(state={\n    isLoading: false,\n    err:null,\n    shares:[]\n},action) =>\n{\n    switch (action.type)\n    {\n        case ActionTypes.SHARE_FAILURE:\n            return{\n                ...state,\n                isLoading: false,\n                err:action.message\n            };\n        case ActionTypes.SHARE_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case ActionTypes.SHARE_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                shares: action.payload\n            };\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const myShares =(state={\n    isLoading: false,\n    err:null\n},action) =>\n{\n    switch (action.type)\n    {\n        case ActionTypes.MYSHARE_FAILURE:\n            return{\n                ...state,\n                isLoading: false,\n                err:action.message\n            };\n        case ActionTypes.MYSHARE_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case ActionTypes.MYSHARE_SUCCESS:\n            return {\n                ...state,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const sale =(state={\n    isLoading: false,\n    err:null\n},action) =>\n{\n    switch (action.type)\n    {\n        case ActionTypes.SALE_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case ActionTypes.SALE_SUCCESS:\n            return {\n                ...state,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}","export const CreateAccount = {\n    firstname: '',\n    lastname: '',\n    username:'',\n    phone:'',\n    address:'',\n    country:'Bandrinka',\n    password:'',\n    rpassword:'',\n    broker:false,\n    LicenceNumber:'',\n    company: '',\n    commision:'',\n    gender:'Male',\n    type:'full service'\n}\n\nexport const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import * as ActionTypes from './ActionTypes';\n\nexport const accountCreation =(state={\n    isLoading: false,\n    err:null\n},action) =>\n{\n    switch (action.type)\n    {\n        case ActionTypes.ACCOUNT_ERROR:\n            return{\n                ...state,\n                isLoading: false,\n                err:action.message\n            };\n        case ActionTypes.ACCOUNT_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case ActionTypes.ACCOUNT_SUCCESS:\n            return {\n                ...state,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const country =(state={\n    isLoading: false,\n    err:null,\n    country:[]\n},action) =>\n{\n    switch (action.type)\n    {\n        case ActionTypes.COUNTRY_FAILURE:\n            return{\n                ...state,\n                isLoading: false,\n                err:action.message\n            };\n        case ActionTypes.COUNTRY_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case ActionTypes.COUNTRY_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                country: action.payload\n            };\n        default:\n            return state;\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport MainComponent from \"./Component/MainComponent\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\nclass App extends Component{\n  render()\n  {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <div>\n                    <MainComponent/>\n                </div>\n            </BrowserRouter>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Auth } from './auth';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {account} from \"./account\";\nimport {corporation} from \"./corporation\";\nimport {shares} from \"./shares\";\nimport {myShares} from \"./myShares\";\nimport {sale} from \"./sales\";\nimport {createForms} from \"react-redux-form\";\nimport {CreateAccount, InitialFeedback} from \"./forms\";\nimport {accountCreation} from \"./accountCreation\";\nimport {country} from \"./country\";\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            auth: Auth,\n            account: account,\n            corporation:corporation,\n            shares:shares,\n            myShares:myShares,\n            sale:sale,\n            accountCreation:accountCreation,\n            country:country,\n            ...createForms({\n                createaccount: CreateAccount,\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}